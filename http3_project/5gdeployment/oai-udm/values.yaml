kubernetesType: Vanilla  #Vanilla for community kubernetes distribution

nfimage:
  repository: tolgaomeratalay/udm
  version: augv1                        #image tag, develop tag for experimental features 
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

tcpdumpimage:
  repository: docker.io/corfr/tcpdump
  version: latest
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

proxyimage:
  repository: tolgaomeratalay/biproxy
  version: 2.6
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention 
imagePullSecrets: 
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-udm10-sa"

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

#service type is fixed to clusterIP, it is only support for non multus interface (eth0)

securityContext:
  privileged: false

start:
  udm: true
  tcpdump: false
  proxy: false

config:
  tz: "Europe/Paris"
  instance: 0
  pidDirectory: "/var/run"
  udmName: "oai-udm"
  sbiIfName: "eth0"
  sbiPortHttp1: "80"
  sbiPortHttp2: "8080"
  udmApiVersionNb: "v1"
  useFqdnDns: "yes"       #yes to enable FQDN resoultion instead of ip-addresses but we still need to put some dummy ip-address in Ip-address field 
  nfRegistration: "no"    #yes to register to NRF
  useHttp2: "no"          #yes to enable http2
  udrIpAddress: "127.0.0.1"
  udrPort: "80"
  udrApiVersionNb: "v1"   #Nb means northbound
  udrFqdn: "oai-udr10-svc"
  nrfIpAddress: "127.0.0.1"
  nrfPort: "80"
  nrfApiVersionNb: "v1"   #Nb means northbound
  nrfFqdn: "oai-nrf10-svc"

proxyconfig:
  saname: "udm10"
  sasubfunc: "udm"
  saip: "127.0.0.1" # this is currently set to podIP in the source code 
  saloc: "local"
  sak8sdns: "oai-udm10-svc"
  savnftype: "udm"
  savnfid: "udm1"
  sasliceid: "1"
  streamscpip: "stream-scp1-svc"
  streamscpport: "10090"
  randomize: "1"
  loglevel: "trace"
  clientcount: "0"
  multireg: "1"
  operationmode: "5G_SA"
  valmethod: "NONE"
  routemethod: "SCP"
  useotel: "NO" # set to yes for integrating with an OpenTelemetry node. SVC fixed for now
  lbmet: "round-robin" #load balancing method -- set to [pick2 ; round-robin]
  maxret: "3" #failover retry count
  tokfetch: "TRUE" #condition for always fetching tokens, bypasses token cache for testing
  nrfresplocal: "FALSE" #condition for local response to NRF discovery requests using the map
  usediscontimeout: "TRUE" #condition for re-discovery upon timeout on failed outgoing requests -- FALSE for 5G_STREAM

persistence:
  sharedvolume: false
  volumneName: managed-nfs-storage
  size: 1Gi

resources:
  define: false
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi

readinessProbe: false

livenessProbe: false

terminationGracePeriodSeconds: 5

nodeSelector: 
  type: az

nodeName: 
